version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.10.0
        environment:
          DISCORD_BOT_TOKEN: $DISCORD_BOT_TOKEN_STAGING
          AWS_APPSYNC_APIKEY: $AWS_APPSYNC_APIKEY_STAGING
          AWS_APPSYNC_GRAPHQLENDPOINT: $AWS_APPSYNC_GRAPHQLENDPOINT_STAGING
          AWS_APPSYNC_REGION: $AWS_APPSYNC_REGION_STAGING
          TENOR_API_KEY: $TENOR_API_KEY
    working_directory: ~/src
    steps:
      - checkout:
          path: ~/src
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build app
          command: npm run tsc
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .build
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Push to Dockerhub
          command: |
            TAG=0.1.$CIRCLE_SHA1
            docker build -f Dockerfile.staging -t amnrsln/turbot-staging:$TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKER_USER/turbot-staging:$TAG
  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: SSH to server
          command: |
            ssh $TEHBOT_LIGHTSAIL_USERNAME@$TEHBOT_LIGHTSAIL_PUBLIC_IP \
            "docker login -u $DOCKER_USER -p $DOCKER_PASS && \
            docker pull amnrsln/turbot-staging:0.1.${CIRCLE_SHA1} && \
            docker stop turbot-staging || true && docker rm turbot-staging || true && \
            docker run --name turbot-staging -d \
            -p 8080:8080 \
            --restart=unless-stopped \
            -e DISCORD_BOT_TOKEN=$DISCORD_BOT_TOKEN_STAGING \
            -e AWS_APPSYNC_APIKEY=$AWS_APPSYNC_API_KEY_STAGING \
            -e AWS_APPSYNC_GRAPHQLENDPOINT=$AWS_APPSYNC_GRAPHQL_ENDPOINT_STAGING \
            -e AWS_APPSYNC_REGION=$AWS_APPSYNC_REGION_STAGING \
            -e TENOR_API_KEY=$TENOR_API_KEY \
            amnrsln/turbot-staging:0.1.${CIRCLE_SHA1}"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: develop
