# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.10.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/tehbot/src

    steps:
      - checkout:
          path: ~/tehbot/src

      - run:
          command: ls /home/circleci/tehbot/src/

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm ci
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build app
          command: npm run tsc
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .build
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
  deploy:
    docker:
      - image: circleci/node:12.10.0
    steps:
      - run:
          name: Deploy production
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@54.169.170.107 \
            "echo Start deploy && \
            export NODE_ENV=production && \
            export AWS_APPSYNC_APIKEY=$AWS_APPSYNC_APIKEY && \
            export AWS_APPSYNC_GRAPHQLENDPOINT=$AWS_APPSYNC_GRAPHQLENDPOINT && \
            export AWS_APPSYNC_REGION=$AWS_APPSYNC_REGION && \
            export DISCORD_BOT_TOKEN=$DISCORD_BOT_TOKEN && \
            export TENOR_API_KEY=$TENOR_API_KEY && \
            printenv && \
            cd ~/app/bot/tehbot && \
            echo git pull && \
            git checkout develop && \
            git pull && \
            echo install dependencies && \
            npm install && \
            echo compile typescript && \
            npm run tsc && \ 
            echo start pm2 && \
            pm2 stop main && \
            pm2 start .build/main.js && \
            echo Deploy end" 

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
